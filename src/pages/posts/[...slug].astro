---
import { type CollectionEntry, getCollection, render } from "astro:content";
import BlogPost from '../../layouts/BlogPost.astro';
import TableOfContents from "../../components/TableOfContents.astro";
import BackToTop from "../../components/BackToTop.astro";
import PostNavigation from '../../components/PostNavigation.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings } = await render(post);

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

function getNextPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex + 1];
    }
  }
}

function getPrevPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex - 1];
    }
  }
}

const nextPost = getNextPost();
const prevPost = getPrevPost();
---

<BlogPost {...post}>
  {headings.length > 0 && <TableOfContents headings={headings} />}
  <Content />
  <br/>
  <BackToTop />
  <br/>
  <br/>
  <PostNavigation prevPost={prevPost} nextPost={nextPost} />
</BlogPost>
