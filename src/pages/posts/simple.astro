---
import { getCollection } from 'astro:content';
import FormattedDate from '@/components/FormattedDate.astro';
import Base from '@/layouts/Base.astro';
import { readingTime } from "@/lib/utils";

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
);
---

<Base>
  <section>
    <div class="flex flex-col gap-10 my-10 prose dark:prose-invert prose-headings:font-semibold prose-headings:my-0 prose-p:my-0 prose-headings:tracking-tight max-w-none divide-y divide-border">
      {
        posts.map((post) => (
          <a
            href={`/posts/${post.id}`}
            class="hover:opacity-75 transition-opacity duration-300 flex flex-col justify-between no-underline pb-4 font-normal"
          >
            <h1>
              {post.data.title}
            </h1>
            <p class="my-0">
              {post.data.description}
            </p>

            <div class="flex items-center flex-wrap gap-x-3 gap-y-0 text-sm opacity-80">
              <p class="flex items-center mb-0 mt-0">
                <FormattedDate
                  date={post.data.publishDate}
                />
              </p>
              &bull;
              {post.body && (<p class="flex items-center gap-2 mb-0 mt-0">
                <span>{readingTime(post.body)}</span>
              </p>
              )}
            </div>
          </a>
        ))
      }
    </div>
  </section>
</Base>
