---
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "short",
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
const formattedDate = post.data.publishDate.toLocaleString('en-US', { month: 'short', day: 'numeric' });

const { remarkPluginFrontmatter } = await render(post);
const readingTime: string = remarkPluginFrontmatter.readingTime;
---

<a data-astro-prefetch href={`/posts/${post.id}/`} class="relative group flex justify-between py-3 text-foreground/90 hover:text-foreground duration-300">
  <div class="grow">
    <div class="flex items-center gap-x-1 opacity-80 font-medium">
      <span class="text-xs">
        <FormattedDate date={post.data.publishDate} dateTimeOptions={dateTimeOptions} />
      </span>
    </div>
    <p class="line-clamp-1 font-semibold group-hover:underline decoration-wavy decoration-1 underline-offset-[2px] decoration-sky-500 dark:decoration-sky-400 duration-300">
      {post.data.title}
    </p>
    <span class="line-clamp-1 text-foreground/80 text-sm">
      {post.data.description}
    </span>
    <span class="font-medium capitalize text-xs sm:hidden text-muted-foreground">
      {readingTime}
    </span>
  </div>
  <div class="flex items-center gap-3 flex-none">
    {post.data.draft && <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-md text-xs font-medium bg-muted text-foreground">Draft </span>}
    <div class="text-xs font-medium text-muted-foreground group-hover:text-foreground transition-colors duration-300 ease-in-out sm:inline-flex hidden">
      {readingTime}
    </div>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      class="size-5 stroke-2 fill-none stroke-current group-hover:stroke-foreground">
      <line x1="5" y1="12" x2="19" y2="12" class="translate-x-3 group-hover:translate-x-0 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 ease-in-out" />
      <polyline points="12 5 19 12 12 19" class="-translate-x-1 group-hover:translate-x-0 transition-transform duration-300 ease-in-out" />
    </svg>
  </div>
</a>
